// This code was generated by the Gardens Point Parser Generator
// Copyright (c) Wayne Kelly, John Gough, QUT 2005-2014
// (see accompanying GPPGcopyright.rtf)

// GPPG version 1.5.2
// Machine:  BLUEGENE
// DateTime: 23.11.2015 20:39:57
// UserName: MikhailoMMX
// Input file <LWParser.y - 23.11.2015 20:39:56>

// options: no-lines gplex

using System;
using System.Collections.Generic;
using System.CodeDom.Compiler;
using System.Globalization;
using System.Text;
using QUT.Gppg;
using AspectCore;

namespace LWParser
{
public enum Tokens {error=2,EOF=3,LetterDigit=4,Sign=5,_Copen=6,
    _Cclose=7,_PercPerc=8,_PercCopen=9,_PercCclose=10,_Perc=11,_Colon=12,
    _Scolon=13,_Pipe=14};

public partial class ValueType
{ 
  public SourceEntity type_SourceEntity;
  public Y_TreeNode type_Y_TreeNode;
  public Token type_Token;
  public Program type_Program;
  public Section1 type_Section1;
  public S1Node type_S1Node;
  public Section2 type_Section2;
  public yRule type_yRule;
  public SubRule type_SubRule;
  public subRulePart type_subRulePart;
  public Section3 type_Section3;
  public SourceEntityUniformSet type_SourceEntityUniformSet;

}
// Abstract base class for GPLEX scanners
[GeneratedCodeAttribute( "Gardens Point Parser Generator", "1.5.2")]
public abstract class ScanBase : AbstractScanner<ValueType,LexLocation> {
  private LexLocation __yylloc = new LexLocation();
  public override LexLocation yylloc { get { return __yylloc; } set { __yylloc = value; } }
  protected virtual bool yywrap() { return true; }
}

// Utility class for encapsulating token information
[GeneratedCodeAttribute( "Gardens Point Parser Generator", "1.5.2")]
public class ScanObj {
  public int token;
  public ValueType yylval;
  public LexLocation yylloc;
  public ScanObj( int t, ValueType val, LexLocation loc ) {
    this.token = t; this.yylval = val; this.yylloc = loc;
  }
}

[GeneratedCodeAttribute( "Gardens Point Parser Generator", "1.5.2")]
public partial class Parser: ShiftReduceParser<ValueType, LexLocation>
{
#pragma warning disable 649
  private static Dictionary<int, string> aliases;
#pragma warning restore 649
  private static Rule[] rules = new Rule[87];
  private static State[] states = new State[95];
  private static string[] nonTerms = new string[] {
      "Program", "Action", "Section1", "S1Node", "Section2", "yRule", "SubRule", 
      "subRulePart", "Section3", "_Section1_set", "_Section2_set", "_yRule_set", 
      "_SubRule_set", "_ANY", "_ANY5", "_ANY6", "_ANY7", "_ANY8", "_ANY9", "_", 
      "__ANY5_list", "__ANY7_list", "__ANY9_list", "$accept", };

  static Parser() {
    states[0] = new State(-15,new int[]{-1,1,-3,3,-10,57}, new int[]{1,0});
    states[1] = new State(new int[]{3,2},new int[]{}, new int[]{1,1});
    states[2] = new State(-1,new int[]{}, new int[]{1,2});
    states[3] = new State(new int[]{8,4},new int[]{}, new int[]{3,1});
    states[4] = new State(-17,new int[]{-5,5,-11,21}, new int[]{3,2});
    states[5] = new State(new int[]{8,6},new int[]{}, new int[]{3,3});
    states[6] = new State(-85,new int[]{-9,7,-23,8}, new int[]{3,4});
    states[7] = new State(-3,new int[]{}, new int[]{3,5});
    states[8] = new State(new int[]{4,10,5,11,6,12,7,13,8,14,9,15,10,16,11,17,12,18,13,19,14,20,3,-14},new int[]{-19,9}, new int[]{14,1});
    states[9] = new State(-86,new int[]{}, new int[]{86,2});
    states[10] = new State(-67,new int[]{}, new int[]{67,1});
    states[11] = new State(-68,new int[]{}, new int[]{68,1});
    states[12] = new State(-69,new int[]{}, new int[]{69,1});
    states[13] = new State(-70,new int[]{}, new int[]{70,1});
    states[14] = new State(-71,new int[]{}, new int[]{71,1});
    states[15] = new State(-72,new int[]{}, new int[]{72,1});
    states[16] = new State(-73,new int[]{}, new int[]{73,1});
    states[17] = new State(-74,new int[]{}, new int[]{74,1});
    states[18] = new State(-75,new int[]{}, new int[]{75,1});
    states[19] = new State(-76,new int[]{}, new int[]{76,1});
    states[20] = new State(-77,new int[]{}, new int[]{77,1});
    states[21] = new State(new int[]{4,23,2,56,8,-8},new int[]{-6,22}, new int[]{8,1});
    states[22] = new State(-18,new int[]{}, new int[]{18,2});
    states[23] = new State(new int[]{12,24},new int[]{}, new int[]{9,1});
    states[24] = new State(-21,new int[]{-12,25,-7,55,-13,29}, new int[]{9,2});
    states[25] = new State(new int[]{13,26,14,27},new int[]{}, new int[]{9,3});
    states[26] = new State(-9,new int[]{}, new int[]{9,4});
    states[27] = new State(-21,new int[]{-7,28,-13,29}, new int[]{20,2});
    states[28] = new State(-20,new int[]{}, new int[]{20,3});
    states[29] = new State(new int[]{4,32,5,33,7,34,8,35,9,36,10,37,11,38,12,39,6,41,13,-11,14,-11},new int[]{-8,30,-18,31,-2,40}, new int[]{11,1});
    states[30] = new State(-22,new int[]{}, new int[]{22,2});
    states[31] = new State(-12,new int[]{}, new int[]{12,1});
    states[32] = new State(-59,new int[]{}, new int[]{59,1});
    states[33] = new State(-60,new int[]{}, new int[]{60,1});
    states[34] = new State(-61,new int[]{}, new int[]{61,1});
    states[35] = new State(-62,new int[]{}, new int[]{62,1});
    states[36] = new State(-63,new int[]{}, new int[]{63,1});
    states[37] = new State(-64,new int[]{}, new int[]{64,1});
    states[38] = new State(-65,new int[]{}, new int[]{65,1});
    states[39] = new State(-66,new int[]{}, new int[]{66,1});
    states[40] = new State(-13,new int[]{}, new int[]{13,1});
    states[41] = new State(-78,new int[]{-20,42}, new int[]{2,1});
    states[42] = new State(new int[]{7,43,4,46,5,47,8,48,9,49,10,50,11,51,12,52,13,53,14,54,6,41},new int[]{-14,44,-2,45}, new int[]{2,2});
    states[43] = new State(-2,new int[]{}, new int[]{2,3});
    states[44] = new State(-79,new int[]{}, new int[]{79,2});
    states[45] = new State(-80,new int[]{}, new int[]{80,2});
    states[46] = new State(-23,new int[]{}, new int[]{23,1});
    states[47] = new State(-24,new int[]{}, new int[]{24,1});
    states[48] = new State(-25,new int[]{}, new int[]{25,1});
    states[49] = new State(-26,new int[]{}, new int[]{26,1});
    states[50] = new State(-27,new int[]{}, new int[]{27,1});
    states[51] = new State(-28,new int[]{}, new int[]{28,1});
    states[52] = new State(-29,new int[]{}, new int[]{29,1});
    states[53] = new State(-30,new int[]{}, new int[]{30,1});
    states[54] = new State(-31,new int[]{}, new int[]{31,1});
    states[55] = new State(-19,new int[]{}, new int[]{19,1});
    states[56] = new State(-10,new int[]{}, new int[]{10,1});
    states[57] = new State(new int[]{9,59,11,73,2,94,8,-4},new int[]{-4,58}, new int[]{4,1});
    states[58] = new State(-16,new int[]{}, new int[]{16,2});
    states[59] = new State(-81,new int[]{-21,60}, new int[]{5,1});
    states[60] = new State(new int[]{10,61,4,63,5,64,6,65,7,66,8,67,9,68,11,69,12,70,13,71,14,72},new int[]{-15,62}, new int[]{5,2});
    states[61] = new State(-5,new int[]{}, new int[]{5,3});
    states[62] = new State(-82,new int[]{}, new int[]{82,2});
    states[63] = new State(-32,new int[]{}, new int[]{32,1});
    states[64] = new State(-33,new int[]{}, new int[]{33,1});
    states[65] = new State(-34,new int[]{}, new int[]{34,1});
    states[66] = new State(-35,new int[]{}, new int[]{35,1});
    states[67] = new State(-36,new int[]{}, new int[]{36,1});
    states[68] = new State(-37,new int[]{}, new int[]{37,1});
    states[69] = new State(-38,new int[]{}, new int[]{38,1});
    states[70] = new State(-39,new int[]{}, new int[]{39,1});
    states[71] = new State(-40,new int[]{}, new int[]{40,1});
    states[72] = new State(-41,new int[]{}, new int[]{41,1});
    states[73] = new State(new int[]{4,86,5,87,7,88,9,89,10,90,12,91,13,92,14,93},new int[]{-16,74}, new int[]{6,1});
    states[74] = new State(-83,new int[]{-22,75}, new int[]{6,2});
    states[75] = new State(new int[]{4,77,5,78,6,79,7,80,9,81,10,82,12,83,13,84,14,85,11,-6,2,-6,8,-6},new int[]{-17,76}, new int[]{6,3});
    states[76] = new State(-84,new int[]{}, new int[]{84,2});
    states[77] = new State(-50,new int[]{}, new int[]{50,1});
    states[78] = new State(-51,new int[]{}, new int[]{51,1});
    states[79] = new State(-52,new int[]{}, new int[]{52,1});
    states[80] = new State(-53,new int[]{}, new int[]{53,1});
    states[81] = new State(-54,new int[]{}, new int[]{54,1});
    states[82] = new State(-55,new int[]{}, new int[]{55,1});
    states[83] = new State(-56,new int[]{}, new int[]{56,1});
    states[84] = new State(-57,new int[]{}, new int[]{57,1});
    states[85] = new State(-58,new int[]{}, new int[]{58,1});
    states[86] = new State(-42,new int[]{}, new int[]{42,1});
    states[87] = new State(-43,new int[]{}, new int[]{43,1});
    states[88] = new State(-44,new int[]{}, new int[]{44,1});
    states[89] = new State(-45,new int[]{}, new int[]{45,1});
    states[90] = new State(-46,new int[]{}, new int[]{46,1});
    states[91] = new State(-47,new int[]{}, new int[]{47,1});
    states[92] = new State(-48,new int[]{}, new int[]{48,1});
    states[93] = new State(-49,new int[]{}, new int[]{49,1});
    states[94] = new State(-7,new int[]{}, new int[]{7,1});

    for (int sNo = 0; sNo < states.Length; sNo++) states[sNo].number = sNo;

    rules[1] = new Rule(-24, new int[]{-1,3});
    rules[2] = new Rule(-2, new int[]{6,-20,7});
    rules[3] = new Rule(-1, new int[]{-3,8,-5,8,-9});
    rules[4] = new Rule(-3, new int[]{-10});
    rules[5] = new Rule(-4, new int[]{9,-21,10});
    rules[6] = new Rule(-4, new int[]{11,-16,-22});
    rules[7] = new Rule(-4, new int[]{2});
    rules[8] = new Rule(-5, new int[]{-11});
    rules[9] = new Rule(-6, new int[]{4,12,-12,13});
    rules[10] = new Rule(-6, new int[]{2});
    rules[11] = new Rule(-7, new int[]{-13});
    rules[12] = new Rule(-8, new int[]{-18});
    rules[13] = new Rule(-8, new int[]{-2});
    rules[14] = new Rule(-9, new int[]{-23});
    rules[15] = new Rule(-10, new int[]{});
    rules[16] = new Rule(-10, new int[]{-10,-4});
    rules[17] = new Rule(-11, new int[]{});
    rules[18] = new Rule(-11, new int[]{-11,-6});
    rules[19] = new Rule(-12, new int[]{-7});
    rules[20] = new Rule(-12, new int[]{-12,14,-7});
    rules[21] = new Rule(-13, new int[]{});
    rules[22] = new Rule(-13, new int[]{-13,-8});
    rules[23] = new Rule(-14, new int[]{4});
    rules[24] = new Rule(-14, new int[]{5});
    rules[25] = new Rule(-14, new int[]{8});
    rules[26] = new Rule(-14, new int[]{9});
    rules[27] = new Rule(-14, new int[]{10});
    rules[28] = new Rule(-14, new int[]{11});
    rules[29] = new Rule(-14, new int[]{12});
    rules[30] = new Rule(-14, new int[]{13});
    rules[31] = new Rule(-14, new int[]{14});
    rules[32] = new Rule(-15, new int[]{4});
    rules[33] = new Rule(-15, new int[]{5});
    rules[34] = new Rule(-15, new int[]{6});
    rules[35] = new Rule(-15, new int[]{7});
    rules[36] = new Rule(-15, new int[]{8});
    rules[37] = new Rule(-15, new int[]{9});
    rules[38] = new Rule(-15, new int[]{11});
    rules[39] = new Rule(-15, new int[]{12});
    rules[40] = new Rule(-15, new int[]{13});
    rules[41] = new Rule(-15, new int[]{14});
    rules[42] = new Rule(-16, new int[]{4});
    rules[43] = new Rule(-16, new int[]{5});
    rules[44] = new Rule(-16, new int[]{7});
    rules[45] = new Rule(-16, new int[]{9});
    rules[46] = new Rule(-16, new int[]{10});
    rules[47] = new Rule(-16, new int[]{12});
    rules[48] = new Rule(-16, new int[]{13});
    rules[49] = new Rule(-16, new int[]{14});
    rules[50] = new Rule(-17, new int[]{4});
    rules[51] = new Rule(-17, new int[]{5});
    rules[52] = new Rule(-17, new int[]{6});
    rules[53] = new Rule(-17, new int[]{7});
    rules[54] = new Rule(-17, new int[]{9});
    rules[55] = new Rule(-17, new int[]{10});
    rules[56] = new Rule(-17, new int[]{12});
    rules[57] = new Rule(-17, new int[]{13});
    rules[58] = new Rule(-17, new int[]{14});
    rules[59] = new Rule(-18, new int[]{4});
    rules[60] = new Rule(-18, new int[]{5});
    rules[61] = new Rule(-18, new int[]{7});
    rules[62] = new Rule(-18, new int[]{8});
    rules[63] = new Rule(-18, new int[]{9});
    rules[64] = new Rule(-18, new int[]{10});
    rules[65] = new Rule(-18, new int[]{11});
    rules[66] = new Rule(-18, new int[]{12});
    rules[67] = new Rule(-19, new int[]{4});
    rules[68] = new Rule(-19, new int[]{5});
    rules[69] = new Rule(-19, new int[]{6});
    rules[70] = new Rule(-19, new int[]{7});
    rules[71] = new Rule(-19, new int[]{8});
    rules[72] = new Rule(-19, new int[]{9});
    rules[73] = new Rule(-19, new int[]{10});
    rules[74] = new Rule(-19, new int[]{11});
    rules[75] = new Rule(-19, new int[]{12});
    rules[76] = new Rule(-19, new int[]{13});
    rules[77] = new Rule(-19, new int[]{14});
    rules[78] = new Rule(-20, new int[]{});
    rules[79] = new Rule(-20, new int[]{-20,-14});
    rules[80] = new Rule(-20, new int[]{-20,-2});
    rules[81] = new Rule(-21, new int[]{});
    rules[82] = new Rule(-21, new int[]{-21,-15});
    rules[83] = new Rule(-22, new int[]{});
    rules[84] = new Rule(-22, new int[]{-22,-17});
    rules[85] = new Rule(-23, new int[]{});
    rules[86] = new Rule(-23, new int[]{-23,-19});
  }

  protected override void Initialize() {
    this.InitSpecialTokens((int)Tokens.error, (int)Tokens.EOF);
    this.InitStates(states);
    this.InitRules(rules);
    this.InitNonTerminals(nonTerms);
  }

  protected override void DoAction(int action)
  {
    CurrentSemanticValue = new ValueType();
#pragma warning disable 162, 1522
    switch (action)
    {
      case 2: // Action -> _Copen, _, _Cclose
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-3].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.Value.Add("Action");

	}
        break;
      case 3: // Program -> Section1, _PercPerc, Section2, _PercPerc, Section3
{
		CurrentSemanticValue.type_Program = new Program(new List<string>(), LocationStack[LocationStack.Depth-5].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Program.Location;
		CurrentSemanticValue.type_Program.Value.Add("Program");
		CurrentSemanticValue.type_Program.AddItem(ValueStack[ValueStack.Depth-5].type_Section1);
		CurrentSemanticValue.type_Program.AddItem(ValueStack[ValueStack.Depth-3].type_Section2);
		CurrentSemanticValue.type_Program.AddItem(ValueStack[ValueStack.Depth-1].type_Section3);
		root = CurrentSemanticValue.type_Program;
	}
        break;
      case 4: // Section1 -> _Section1_set
{
		CurrentSemanticValue.type_Section1 = new Section1(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Section1.Location;
		CurrentSemanticValue.type_Section1.Value.Add("Section1");
		CurrentSemanticValue.type_Section1.AddSubItems(ValueStack[ValueStack.Depth-1].type_SourceEntityUniformSet);

	}
        break;
      case 5: // S1Node -> _PercCopen, __ANY5_list, _PercCclose
{
		CurrentSemanticValue.type_S1Node = new S1Node(new List<string>(), LocationStack[LocationStack.Depth-3].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_S1Node.Location;
		CurrentSemanticValue.type_S1Node.AddValue(ValueStack[ValueStack.Depth-3].type_Token);
		CurrentSemanticValue.type_S1Node.AddValue(ValueStack[ValueStack.Depth-2].type_Y_TreeNode);
		CurrentSemanticValue.type_S1Node.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
errBegin = CurrentLocationSpan;
	}
        break;
      case 6: // S1Node -> _Perc, _ANY6, __ANY7_list
{
		CurrentSemanticValue.type_S1Node = new S1Node(new List<string>(), LocationStack[LocationStack.Depth-3].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_S1Node.Location;
		CurrentSemanticValue.type_S1Node.AddValue(ValueStack[ValueStack.Depth-3].type_Token);
		CurrentSemanticValue.type_S1Node.AddValue(ValueStack[ValueStack.Depth-2].type_Y_TreeNode);
		CurrentSemanticValue.type_S1Node.AddValue(ValueStack[ValueStack.Depth-1].type_Y_TreeNode);
errBegin = CurrentLocationSpan;
	}
        break;
      case 7: // S1Node -> error
{
        CurrentLocationSpan = new LexLocation(errBegin.EndLine, errBegin.EndColumn, LocationStack[LocationStack.Depth-1].StartLine, LocationStack[LocationStack.Depth-1].StartColumn);
        Y_TreeNode err = new Y_TreeNode((Scanner as Scanner).errorMsg, CurrentLocationSpan);
        Errors.Add(err);
        errBegin = CurrentLocationSpan;
    }
        break;
      case 8: // Section2 -> _Section2_set
{
		CurrentSemanticValue.type_Section2 = new Section2(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Section2.Location;
		CurrentSemanticValue.type_Section2.Value.Add("Section2");
		CurrentSemanticValue.type_Section2.AddSubItems(ValueStack[ValueStack.Depth-1].type_SourceEntityUniformSet);

	}
        break;
      case 9: // yRule -> LetterDigit, _Colon, _yRule_set, _Scolon
{
		CurrentSemanticValue.type_yRule = new yRule(new List<string>(), LocationStack[LocationStack.Depth-4].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_yRule.Location;
		CurrentSemanticValue.type_yRule.AddValue(ValueStack[ValueStack.Depth-4].type_Token);
		CurrentSemanticValue.type_yRule.AddSubItems(ValueStack[ValueStack.Depth-2].type_SourceEntityUniformSet);
errBegin = CurrentLocationSpan;
	}
        break;
      case 10: // yRule -> error
{
        CurrentLocationSpan = new LexLocation(errBegin.EndLine, errBegin.EndColumn, LocationStack[LocationStack.Depth-1].StartLine, LocationStack[LocationStack.Depth-1].StartColumn);
        Y_TreeNode err = new Y_TreeNode((Scanner as Scanner).errorMsg, CurrentLocationSpan);
        Errors.Add(err);
        errBegin = CurrentLocationSpan;
    }
        break;
      case 11: // SubRule -> _SubRule_set
{
		CurrentSemanticValue.type_SubRule = new SubRule(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_SubRule.Location;
		CurrentSemanticValue.type_SubRule.AddValue(ValueStack[ValueStack.Depth-1].type_SourceEntityUniformSet);
		CurrentSemanticValue.type_SubRule.AddSubItems(ValueStack[ValueStack.Depth-1].type_SourceEntityUniformSet);

	}
        break;
      case 12: // subRulePart -> _ANY8
{
		CurrentSemanticValue.type_subRulePart = new subRulePart(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_subRulePart.Location;
		CurrentSemanticValue.type_subRulePart.AddValue(ValueStack[ValueStack.Depth-1].type_Y_TreeNode);

	}
        break;
      case 13: // subRulePart -> Action
{
		CurrentSemanticValue.type_subRulePart = new subRulePart(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_subRulePart.Location;
		CurrentSemanticValue.type_subRulePart.AddValue(ValueStack[ValueStack.Depth-1].type_Y_TreeNode);

	}
        break;
      case 14: // Section3 -> __ANY9_list
{
		CurrentSemanticValue.type_Section3 = new Section3(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Section3.Location;
		CurrentSemanticValue.type_Section3.Value.Add("Section3");

	}
        break;
      case 15: // _Section1_set -> /* empty */
{
        CurrentLocationSpan = Scanner.yylloc;
		CurrentSemanticValue.type_SourceEntityUniformSet = new SourceEntityUniformSet("", true, CurrentLocationSpan);

	}
        break;
      case 16: // _Section1_set -> _Section1_set, S1Node
{
        CurrentLocationSpan = LocationStack[LocationStack.Depth-2].Merge(LocationStack[LocationStack.Depth-1]);
		CurrentSemanticValue.type_SourceEntityUniformSet = ValueStack[ValueStack.Depth-2].type_SourceEntityUniformSet;
        CurrentSemanticValue.type_SourceEntityUniformSet.Location = CurrentLocationSpan;
		CurrentSemanticValue.type_SourceEntityUniformSet.AddItem(ValueStack[ValueStack.Depth-1].type_S1Node);
        CurrentSemanticValue.type_SourceEntityUniformSet.AddValue(ValueStack[ValueStack.Depth-1].type_S1Node);
    }
        break;
      case 17: // _Section2_set -> /* empty */
{
        CurrentLocationSpan = Scanner.yylloc;
		CurrentSemanticValue.type_SourceEntityUniformSet = new SourceEntityUniformSet("", true, CurrentLocationSpan);

	}
        break;
      case 18: // _Section2_set -> _Section2_set, yRule
{
        CurrentLocationSpan = LocationStack[LocationStack.Depth-2].Merge(LocationStack[LocationStack.Depth-1]);
		CurrentSemanticValue.type_SourceEntityUniformSet = ValueStack[ValueStack.Depth-2].type_SourceEntityUniformSet;
        CurrentSemanticValue.type_SourceEntityUniformSet.Location = CurrentLocationSpan;
		CurrentSemanticValue.type_SourceEntityUniformSet.AddItem(ValueStack[ValueStack.Depth-1].type_yRule);
        CurrentSemanticValue.type_SourceEntityUniformSet.AddValue(ValueStack[ValueStack.Depth-1].type_yRule);
    }
        break;
      case 19: // _yRule_set -> SubRule
{
        CurrentLocationSpan = Scanner.yylloc;
		CurrentSemanticValue.type_SourceEntityUniformSet = new SourceEntityUniformSet("|", false, CurrentLocationSpan);
		CurrentSemanticValue.type_SourceEntityUniformSet.AddItem(ValueStack[ValueStack.Depth-1].type_SubRule);
		CurrentSemanticValue.type_SourceEntityUniformSet.Value.Add("1");

	}
        break;
      case 20: // _yRule_set -> _yRule_set, _Pipe, SubRule
{
        CurrentLocationSpan = LocationStack[LocationStack.Depth-3].Merge(LocationStack[LocationStack.Depth-1]);
		CurrentSemanticValue.type_SourceEntityUniformSet = ValueStack[ValueStack.Depth-3].type_SourceEntityUniformSet;
        CurrentSemanticValue.type_SourceEntityUniformSet.Location = CurrentLocationSpan;
		CurrentSemanticValue.type_SourceEntityUniformSet.AddItem(ValueStack[ValueStack.Depth-1].type_SubRule);
        CurrentSemanticValue.type_SourceEntityUniformSet.AddValue(ValueStack[ValueStack.Depth-1].type_SubRule);
    }
        break;
      case 21: // _SubRule_set -> /* empty */
{
        CurrentLocationSpan = Scanner.yylloc;
		CurrentSemanticValue.type_SourceEntityUniformSet = new SourceEntityUniformSet("", true, CurrentLocationSpan);

	}
        break;
      case 22: // _SubRule_set -> _SubRule_set, subRulePart
{
        CurrentLocationSpan = LocationStack[LocationStack.Depth-2].Merge(LocationStack[LocationStack.Depth-1]);
		CurrentSemanticValue.type_SourceEntityUniformSet = ValueStack[ValueStack.Depth-2].type_SourceEntityUniformSet;
        CurrentSemanticValue.type_SourceEntityUniformSet.Location = CurrentLocationSpan;
		CurrentSemanticValue.type_SourceEntityUniformSet.AddItem(ValueStack[ValueStack.Depth-1].type_subRulePart);
        CurrentSemanticValue.type_SourceEntityUniformSet.AddValue(ValueStack[ValueStack.Depth-1].type_subRulePart);
    }
        break;
      case 23: // _ANY -> LetterDigit
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 24: // _ANY -> Sign
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 25: // _ANY -> _PercPerc
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 26: // _ANY -> _PercCopen
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 27: // _ANY -> _PercCclose
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 28: // _ANY -> _Perc
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 29: // _ANY -> _Colon
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 30: // _ANY -> _Scolon
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 31: // _ANY -> _Pipe
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 32: // _ANY5 -> LetterDigit
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 33: // _ANY5 -> Sign
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 34: // _ANY5 -> _Copen
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 35: // _ANY5 -> _Cclose
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 36: // _ANY5 -> _PercPerc
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 37: // _ANY5 -> _PercCopen
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 38: // _ANY5 -> _Perc
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 39: // _ANY5 -> _Colon
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 40: // _ANY5 -> _Scolon
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 41: // _ANY5 -> _Pipe
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 42: // _ANY6 -> LetterDigit
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 43: // _ANY6 -> Sign
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 44: // _ANY6 -> _Cclose
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 45: // _ANY6 -> _PercCopen
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 46: // _ANY6 -> _PercCclose
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 47: // _ANY6 -> _Colon
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 48: // _ANY6 -> _Scolon
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 49: // _ANY6 -> _Pipe
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 50: // _ANY7 -> LetterDigit
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 51: // _ANY7 -> Sign
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 52: // _ANY7 -> _Copen
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 53: // _ANY7 -> _Cclose
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 54: // _ANY7 -> _PercCopen
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 55: // _ANY7 -> _PercCclose
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 56: // _ANY7 -> _Colon
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 57: // _ANY7 -> _Scolon
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 58: // _ANY7 -> _Pipe
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 59: // _ANY8 -> LetterDigit
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 60: // _ANY8 -> Sign
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 61: // _ANY8 -> _Cclose
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 62: // _ANY8 -> _PercPerc
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 63: // _ANY8 -> _PercCopen
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 64: // _ANY8 -> _PercCclose
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 65: // _ANY8 -> _Perc
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 66: // _ANY8 -> _Colon
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 67: // _ANY9 -> LetterDigit
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 68: // _ANY9 -> Sign
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 69: // _ANY9 -> _Copen
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 70: // _ANY9 -> _Cclose
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 71: // _ANY9 -> _PercPerc
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 72: // _ANY9 -> _PercCopen
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 73: // _ANY9 -> _PercCclose
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 74: // _ANY9 -> _Perc
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 75: // _ANY9 -> _Colon
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 76: // _ANY9 -> _Scolon
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 77: // _ANY9 -> _Pipe
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-1].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Token);
		CurrentSemanticValue.type_Y_TreeNode.AddItem(ValueStack[ValueStack.Depth-1].type_Token);

	}
        break;
      case 78: // _ -> /* empty */
{ CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode();
    if (CurrentLocationSpan == null)
        CurrentLocationSpan = new LexLocation(1,0,1,0); 
    
}
        break;
      case 79: // _ -> _, _ANY
{ CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode();
    if (CurrentLocationSpan == null)
        CurrentLocationSpan = new LexLocation(1,0,1,0); 
    
}
        break;
      case 80: // _ -> _, Action
{ CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode();
    if (CurrentLocationSpan == null)
        CurrentLocationSpan = new LexLocation(1,0,1,0); 
    
}
        break;
      case 81: // __ANY5_list -> /* empty */
{ CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode();
    if (CurrentLocationSpan == null)
        CurrentLocationSpan = new LexLocation(1,0,1,0); 
    
}
        break;
      case 82: // __ANY5_list -> __ANY5_list, _ANY5
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-2].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-2].type_Y_TreeNode);
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Y_TreeNode);
		CurrentSemanticValue.type_Y_TreeNode.AddSubItems(ValueStack[ValueStack.Depth-2].type_Y_TreeNode);
		CurrentSemanticValue.type_Y_TreeNode.AddSubItems(ValueStack[ValueStack.Depth-1].type_Y_TreeNode);

	}
        break;
      case 83: // __ANY7_list -> /* empty */
{ CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode();
    if (CurrentLocationSpan == null)
        CurrentLocationSpan = new LexLocation(1,0,1,0); 
    
}
        break;
      case 84: // __ANY7_list -> __ANY7_list, _ANY7
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-2].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-2].type_Y_TreeNode);
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Y_TreeNode);
		CurrentSemanticValue.type_Y_TreeNode.AddSubItems(ValueStack[ValueStack.Depth-2].type_Y_TreeNode);
		CurrentSemanticValue.type_Y_TreeNode.AddSubItems(ValueStack[ValueStack.Depth-1].type_Y_TreeNode);

	}
        break;
      case 85: // __ANY9_list -> /* empty */
{ CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode();
    if (CurrentLocationSpan == null)
        CurrentLocationSpan = new LexLocation(1,0,1,0); 
    
}
        break;
      case 86: // __ANY9_list -> __ANY9_list, _ANY9
{
		CurrentSemanticValue.type_Y_TreeNode = new Y_TreeNode(new List<string>(), LocationStack[LocationStack.Depth-2].Merge(LocationStack[LocationStack.Depth-1]));
        CurrentLocationSpan = CurrentSemanticValue.type_Y_TreeNode.Location;
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-2].type_Y_TreeNode);
		CurrentSemanticValue.type_Y_TreeNode.AddValue(ValueStack[ValueStack.Depth-1].type_Y_TreeNode);
		CurrentSemanticValue.type_Y_TreeNode.AddSubItems(ValueStack[ValueStack.Depth-2].type_Y_TreeNode);
		CurrentSemanticValue.type_Y_TreeNode.AddSubItems(ValueStack[ValueStack.Depth-1].type_Y_TreeNode);

	}
        break;
    }
#pragma warning restore 162, 1522
  }

  protected override string TerminalToString(int terminal)
  {
    if (aliases != null && aliases.ContainsKey(terminal))
        return aliases[terminal];
    else if (((Tokens)terminal).ToString() != terminal.ToString(CultureInfo.InvariantCulture))
        return ((Tokens)terminal).ToString();
    else
        return CharToString((char)terminal);
  }

public LexLocation errBegin = new LexLocation(1,0,1,0);
public List<SourceEntity> Errors = new List<SourceEntity>();
}
}
